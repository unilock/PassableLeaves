plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'com.modrinth.minotaur' version '2.+'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.79.0'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

//def localProperties = new Properties().load(new FileInputStream(rootProject.file("local.properties")))

repositories {
    maven { url 'https://maven.wispforest.io' }
    maven { url 'https://maven.siphalor.de' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"

    modImplementation "de.siphalor:${project.nbtcrafting_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

task gitChangelogTask(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    file = file('CHANGELOG.md')
    fromRepo = file('.')
    prependToFile = false // false will replace the file, true will prepend content
    templateContent = file('changelog.template').getText('UTF-8')
}

modrinth {
//    token = localProperties['modrinth_token']
    projectId = project.modrinth_project_id
    versionNumber = project.version
    versionType = 'release'
    changelog = file('CHANGELOG.md').getText('UTF-8')
    gameVersions = [project.minecraft_version]
    uploadFile = remapJar
    loaders = ['fabric']
    dependencies {
        required.project 'fabric-api'
        required.project 'owo-lib'
        optional.project 'nbt-crafting'
    }
    syncBodyFrom = rootProject.file('README.md').text
}

curseforge {
//    apiKey = localProperties['curseforge_token']
    project {
        id = project.curseforge_project_id
        changelog = file('CHANGELOG.md')
        releaseType = 'release'
        changelogType = 'markdown'
        addGameVersion project.minecraft_version
        addGameVersion 'Fabric'

        mainArtifact(remapJar) {
            displayName = "Passable Leaves ${project.version}"
            relations {
                requiredDependency 'fabric-api'
                requiredDependency 'owo-lib'
                optionalDependency 'nbt-crafting'
            }
        }
    }
}
